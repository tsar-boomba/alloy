on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-body:
    runs-on: ubuntu-latest
    # outputs:
    #   body: ${{ steps.create.outputs.upload-url }}
    steps:
      - uses: actions/checkout@v3
      - run: exit 0

  upload-library:
    needs: create-body
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            prefix: lib
            extension: so
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            prefix: lib
            extension: so
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            prefix: ''
            extension: dll
          - target: aarch64-apple-darwin
            os: macos-latest
            prefix: lib
            extension: dylib
          - target: x86_64-apple-darwin
            os: macos-latest
            prefix: lib
            extension: dylib
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        with:
          target: ${{ matrix.target }}
      - name: Add target
        if: ${{ matrix.target != 'aarch64-unknown-linux-gnu' }}
        run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: Build Library
        run: cargo build --target ${{ matrix.target }} --release --locked -p alloy-runtime
      - name: Prepare Library (tar / zip it)
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a -tzip "${{ matrix.prefix }}alloy_runtime-${{ matrix.target }}-${{ github.ref_name }}.${{ matrix.extension }}.zip" \
              target/${{ matrix.target }}/release/${{ matrix.prefix }}alloy_runtime.${{ matrix.extension }}
          else
            tar -czvf ${{ matrix.prefix }}alloy_runtime-${{ matrix.target }}-${{ github.ref_name }}.${{ matrix.extension }}.tar.gz \
              target/${{ matrix.target }}/release/${{ matrix.prefix }}alloy_runtime.${{ matrix.extension }}
          fi
      - name: Add Artifact To Release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ''
          file: ${{ matrix.prefix }}alloy_runtime-${{ matrix.target }}-${{ github.ref_name }}.${{ matrix.extension }}*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
